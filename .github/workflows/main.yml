name: cypress_learn_project

on: push

env:
  # Set up the Cypress Cloud project ID and record key as environment variables
  # If the Actions secret EXAMPLE_PROJECT_ID is not defined then
  # the projectId is taken from cypress.json (v9) or cypress.config.js (v10 and later).
  # If the Actions secret EXAMPLE_RECORDING_KEY is not defined then recording jobs are skipped.
  GH_ENTERPRISE_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  cypress-run:
    runs-on: ubuntu-latest
    strategy:
      # when one test fails, DO NOT cancel the other
      # containers, because this will kill Cypress processes
      # leaving Cypress Cloud hanging ...
      # https://github.com/cypress-io/github-action/issues/48
      fail-fast: false
    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.1

      - name: Cypress tests run with actions
        uses: cypress-io/github-action@v6.6.1
        with:
          browser: chrome
        env:
          # Get the short ref name of the branch that triggered the workflow run
          COMMIT_INFO_BRANCH: ${{ github.ref_name }}

      - name: Log runner details
        run: |
          echo '=== Disk information ==='
          df -H
          tree -d

      - name: Allure - Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 21

      - name: Allure - Setup Allure CLI
        env:
          ALLURE_VERSION: 2.25.0
        run: |
          wget -q "https://github.com/allure-framework/allure2/releases/download/$ALLURE_VERSION/allure-$ALLURE_VERSION.zip"
          unzip -q "allure-2.25.0.zip"
          echo "$PWD/allure-$ALLURE_VERSION/bin" >> $GITHUB_PATH

      - name: Generate report
        id: generate-report
        env:
          ALLURE_NO_ANALYTICS: 1
          ALLURE_RESULTS_DIR: allure-results
          ALLURE_REPORT_DIR: allure-report
          ALLURE_REPORT_URL: allure-report/index.html
        run: |
          echo "Generating combined report"
          npx allure generate ./output/allure-raw -o ./output/allure-report --clean

          echo "report_url=$ALLURE_REPORT_URL" >> $GITHUB_OUTPUT

      - name: Generate summary for the workflow
        run: |
          echo "### Summary" >> $GITHUB_STEP_SUMMARY

          echo "Report URL: ${{ steps.generate-report.outputs.report_url }}" >> $GITHUB_STEP_SUMMARY

      - name: Free disk space - After report generation
        if: always()
        run: |
          df -H
