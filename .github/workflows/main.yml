name: cypress_learn_project

on: push

env:
  # Set up the Cypress Cloud project ID and record key as environment variables
  # If the Actions secret EXAMPLE_PROJECT_ID is not defined then
  # the projectId is taken from cypress.json (v9) or cypress.config.js (v10 and later).
  # If the Actions secret EXAMPLE_RECORDING_KEY is not defined then recording jobs are skipped.
  GH_ENTERPRISE_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  cypress-run:
    runs-on: ubuntu-latest
    strategy:
      # when one test fails, DO NOT cancel the other
      # containers, because this will kill Cypress processes
      # leaving Cypress Cloud hanging ...
      # https://github.com/cypress-io/github-action/issues/48
      fail-fast: false
      matrix:
        containers: [1, 2]

    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.1

      # Install NPM dependencies, cache them correctly
      # and run all Cypress tests
      - name: Cypress run
        run: |
          npm ci
          npx cypress install

      - name: Cypress tests run with actions
        uses: cypress-io/github-action@v6.6.1
        with:
          browser: chrome
          env: allure=true
        env:
          SPLIT: ${{ strategy.job-total }}
          SPLIT_INDEX: ${{ strategy.job-index }}

      - name: Upload blob report to GitHub Actions Artifacts
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: merged-reports-as-blob-${{ strategy.job-index }} # name of the file you want to have once its uploaded
          path: allure-results # path where the reports are, from where to take the files.
          retention-days: 14

  merge-reports-and-upload:
    # Merge reports after playwright tests, even if some shards have failed
    if: always()
    needs: [cypress-run]
    runs-on: ubuntu-latest

    outputs:
      timestamp: ${{ steps.timestampid.outputs.timestamp }}

    steps:
      # We want a unique identifier to be used when we create subdirectories for our github pages with reports
      - name: Set a timestamp
        id: timestampid
        # this will store current time with UTC in outputs.timestamp (eg of value: 20231028_233147Z)
        run: echo "timestamp=$(date --utc +%Y%m%d_%H%M%SZ)" >> "$GITHUB_OUTPUT"

      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18

        # we now download the reports uploaded previously to merge them and create one single html report
      - name: Download blob reports from GitHub Actions Artifacts
        uses: actions/download-artifact@v3
        with:
          name: merged-reports-as-blob-0 # name of the file stored as artifact (as uploaded at the previous job)
          path: downloaded-merged-reports-as-blob # name of the folder where the download will be saved

      - name: Download blob reports from GitHub Actions Artifacts
        uses: actions/download-artifact@v3
        with:
          name: merged-reports-as-blob-1 # name of the file stored as artifact (as uploaded at the previous job)
          path: downloaded-merged-reports-as-blob # name of the folder where the download will be saved

      - name: /[OPTIONAL] Upload full html report to artifacts for history
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: cypress-report-${{ steps.timestampid.outputs.timestamp }} # name of the file you want to have once its uploaded
          path: downloaded-merged-reports-as-blob # path where the reports are, from where to take the files
          retention-days: 14

      - name: Build test report
        uses: simple-elf/allure-report-action@v1.9
        if: ${{ always() }}
        with:
          gh_pages: gh-pages
          allure_history: allure-history
          allure_results: downloaded-merged-reports-as-blob
          allure_report: allure-report
          keep_reports: 10

      - name: Publish test report
        uses: peaceiris/actions-gh-pages@v3.9.3
        if: ${{ always() }}
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: allure-history

      - name: Write URL in summary
        run: echo "### Test results (link available after 20 secs) - https://${{ github.repository_owner }}.github.io/cypress_learn_project/${{ github.run_number }}/" >> $GITHUB_STEP_SUMMARY

      - name: Free disk space - After report generation
        if: always()
        run: |
          df -H
