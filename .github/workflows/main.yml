name: cypress_learn_project

on: [push, workflow_dispatch]

env:
    # Set up the Cypress Cloud project ID and record key as environment variables
    # If the Actions secret EXAMPLE_PROJECT_ID is not defined then
    # the projectId is taken from cypress.json (v9) or cypress.config.js (v10 and later).
    # If the Actions secret EXAMPLE_RECORDING_KEY is not defined then recording jobs are skipped.
    GH_ENTERPRISE_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    NPM_CACHE_FOLDER: C:\Users\runneradmin\AppData\npm-cache
    CYPRESS_CACHE_FOLDER: C:\Users\runneradmin\AppData\Local\Cypress\Cache


jobs:
  cypress-run:
    runs-on: windows-latest
    strategy:
        # when one test fails, DO NOT cancel the other
        # containers, because this will kill Cypress processes
        # leaving Cypress Cloud hanging ...
        # https://github.com/cypress-io/github-action/issues/48
        fail-fast: false
        matrix:
          containers: [1, 2, 3, 4, 5]
    steps:          
        # install a specific version of Node using
        # https://github.com/actions/setup-node
      - name: Use Node.js 18
        uses: actions/setup-node@v4
        with:
          node-version: 18
      
      - name: Checkout
        uses: actions/checkout@v4
      
      # Restore the previous NPM modules and Cypress binary archives.
      # Any updated archives will be saved automatically after the entire
      # workflow successfully finishes.
      # See https://github.com/actions/cache
      # we use exact restore key to avoid NPM module snowballing
      # https://glebbahmutov.com/blog/do-not-let-npm-cache-snowball/
      - name: Cache central NPM modules
        uses: actions/cache@v3
        with:
          path: |
            C:\Users\runneradmin\AppData\npm-cache
            C:\Users\runneradmin\AppData\Local\Cypress\Cache
          key: ${{ runner.os }}-node-${{ github.ref }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ github.ref }}-${{ hashFiles('**/package-lock.json') }}


      - name: install dependencies and verify Cypress
        env:
          # make sure every Cypress install prints minimal information
          CI: 1
        run: |
          npm install --force
          npx cypress cache path
          npx cypress cache list
          npx cypress verify
          npx cypress info     

      # Install NPM dependencies, cache them correctly
      # and run all Cypress tests
      - name: Cypress run
        uses: cypress-io/github-action@v6
        with:
          browser: chrome            
        env: 
            # Get the short ref name of the branch that triggered the workflow run
            COMMIT_INFO_BRANCH: ${{ github.ref_name }}
            SPLIT: ${{ strategy.job-total }}
            SPLIT_INDEX: ${{ strategy.job-index }}

      # Save screenshots as test artifacts
      # https://github.com/actions/upload-artifact
      - uses: actions/upload-artifact@v3
      # there might be no screenshots created when:
      # - there are no test failures
      # so only upload screenshots if previous step has failed
        if: failure()
        with:
          name: screenshots
          path: cypress/screenshots
